# Copyright 2023 Google, LLC
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

import("../../../../mesa.gni")

src_dir = "$mesa_source_root/src/gallium/drivers/llvmpipe"

config("llvmpipe_config") {
  include_dirs = [
    "$root_gen_dir/third_party/mesa-migrating/build/src/",
    "$mesa_source_root/include/",
    "$mesa_source_root/src/compiler/nir/",
    "$mesa_source_root/src/gallium/auxiliary/",
    "$mesa_source_root/src/gallium/include/",
    "$mesa_source_root/src/",
  ]

  # Suppress warnings.
  configs = [
    "//build/config:Wno-strict-prototypes",
    "$mesa_build_root/..:LLVMHeader_config",
  ]
}

mesa_source_set("llvmpipe") {
  configs = [
    "$mesa_build_root/..:build_config",
    ":llvmpipe_config",
  ]

  deps = [
    "$mesa_build_root/src:sha1",
    "$mesa_build_root/src/compiler/nir",
  ]

  sources = [
    "$src_dir/lp_bld_alpha.c",
    "$src_dir/lp_bld_alpha.h",
    "$src_dir/lp_bld_blend.c",
    "$src_dir/lp_bld_blend.h",
    "$src_dir/lp_bld_blend_aos.c",
    "$src_dir/lp_bld_blend_logicop.c",
    "$src_dir/lp_bld_depth.c",
    "$src_dir/lp_bld_depth.h",
    "$src_dir/lp_bld_interp.c",
    "$src_dir/lp_bld_interp.h",
    "$src_dir/lp_clear.c",
    "$src_dir/lp_clear.h",
    "$src_dir/lp_context.c",
    "$src_dir/lp_context.h",
    "$src_dir/lp_cs_tpool.c",
    "$src_dir/lp_cs_tpool.h",
    "$src_dir/lp_debug.h",
    "$src_dir/lp_draw_arrays.c",
    "$src_dir/lp_fence.c",
    "$src_dir/lp_fence.h",
    "$src_dir/lp_flush.c",
    "$src_dir/lp_flush.h",
    "$src_dir/lp_jit.c",
    "$src_dir/lp_jit.h",
    "$src_dir/lp_limits.h",
    "$src_dir/lp_linear.c",
    "$src_dir/lp_linear_fastpath.c",
    "$src_dir/lp_linear_interp.c",
    "$src_dir/lp_linear_sampler.c",
    "$src_dir/lp_memory.c",
    "$src_dir/lp_memory.h",
    "$src_dir/lp_perf.c",
    "$src_dir/lp_perf.h",
    "$src_dir/lp_public.h",
    "$src_dir/lp_query.c",
    "$src_dir/lp_query.h",
    "$src_dir/lp_rast.c",
    "$src_dir/lp_rast.h",
    "$src_dir/lp_rast_debug.c",
    "$src_dir/lp_rast_linear.c",
    "$src_dir/lp_rast_linear_fallback.c",
    "$src_dir/lp_rast_priv.h",
    "$src_dir/lp_rast_rect.c",
    "$src_dir/lp_rast_tri.c",
    "$src_dir/lp_rast_tri_tmp.h",
    "$src_dir/lp_scene.c",
    "$src_dir/lp_scene.h",
    "$src_dir/lp_scene_queue.c",
    "$src_dir/lp_scene_queue.h",
    "$src_dir/lp_screen.c",
    "$src_dir/lp_screen.h",
    "$src_dir/lp_setup.c",
    "$src_dir/lp_setup.h",
    "$src_dir/lp_setup_analysis.c",
    "$src_dir/lp_setup_context.h",
    "$src_dir/lp_setup_line.c",
    "$src_dir/lp_setup_point.c",
    "$src_dir/lp_setup_rect.c",
    "$src_dir/lp_setup_tri.c",
    "$src_dir/lp_setup_vbuf.c",
    "$src_dir/lp_state.h",
    "$src_dir/lp_state_blend.c",
    "$src_dir/lp_state_clip.c",
    "$src_dir/lp_state_cs.c",
    "$src_dir/lp_state_cs.h",
    "$src_dir/lp_state_derived.c",
    "$src_dir/lp_state_fs.c",
    "$src_dir/lp_state_fs.h",
    "$src_dir/lp_state_fs_analysis.c",
    "$src_dir/lp_state_fs_fastpath.c",
    "$src_dir/lp_state_fs_linear.c",
    "$src_dir/lp_state_fs_linear_llvm.c",
    "$src_dir/lp_state_gs.c",
    "$src_dir/lp_state_rasterizer.c",
    "$src_dir/lp_state_sampler.c",
    "$src_dir/lp_state_setup.c",
    "$src_dir/lp_state_setup.h",
    "$src_dir/lp_state_so.c",
    "$src_dir/lp_state_surface.c",
    "$src_dir/lp_state_tess.c",
    "$src_dir/lp_state_vertex.c",
    "$src_dir/lp_state_vs.c",
    "$src_dir/lp_surface.c",
    "$src_dir/lp_surface.h",
    "$src_dir/lp_tex_sample.c",
    "$src_dir/lp_tex_sample.h",
    "$src_dir/lp_texture.c",
    "$src_dir/lp_texture.h",
  ]
}
