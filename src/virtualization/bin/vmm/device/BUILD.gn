# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/components/fuchsia_unittest_package.gni")
import("//build/testing/cc_test_executable.gni")

group("tests") {
  testonly = true
  deps = [
    ":device_unittests_package",
    "tests",
    "virtio_balloon:tests",
    "virtio_block:tests",
    "virtio_console:tests",
    "virtio_gpu:tests",
    "virtio_input:tests",
    "virtio_mem:tests",
    "virtio_net:tests",
    "virtio_sound:tests",
    "virtio_vsock:tests",
  ]
}

group("components") {
  deps = [
    "virtio_balloon:virtio_balloon_component",
    "virtio_block:virtio_block_component",
    "virtio_console:virtio_console_component",
    "virtio_gpu:virtio_gpu_component",
    "virtio_input:virtio_input_component",
    "virtio_mem:virtio_mem_component",
    "virtio_net:virtio_net_component",
    "virtio_rng:virtio_rng_component",
    "virtio_sound:virtio_sound_component",
    "virtio_vsock:virtio_vsock_cmp",
  ]
}

source_set("lib") {
  sources = [
    "block.h",
    "config.h",
    "input.h",
    "phys_mem.cc",
    "phys_mem.h",
    "virtio_queue.cc",
    "virtio_queue.h",
  ]
  configs += [ "//build/config:all_source" ]
  public_deps = [
    "//sdk/fidl/fuchsia.virtualization.hardware:fuchsia.virtualization.hardware_hlcpp",
    "//sdk/lib/async:async-cpp",
    "//sdk/lib/fit",
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl",
    "//zircon/system/ulib/virtio",
  ]
}

source_set("virtio") {
  visibility = [ "./*" ]

  sources = [
    "device_base.h",
    "stream_base.h",
  ]
  public_deps = [
    ":lib",
    "//sdk/fidl/fuchsia.virtualization.hardware:fuchsia.virtualization.hardware_hlcpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//sdk/lib/sys/cpp",
    "//src/lib/fsl",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/trace-provider",
  ]
}

source_set("qcow_test_data") {
  visibility = [ "//src/virtualization/*" ]
  sources = [ "qcow_test_data.h" ]
}

cc_test_executable("device_unittests") {
  visibility = [ ":*" ]
  testonly = true

  sources = [
    "phys_mem_unittest.cc",
    "virtio_queue_unittest.cc",
  ]

  deps = [
    ":lib",
    "tests:virtio_queue_fake",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
  ]
}

fuchsia_unittest_package("device_unittests_package") {
  manifest = "meta/device_unittests.cml"
  package_name = "device_unittests"
  deps = [ ":device_unittests" ]
  test_specs = {
    log_settings = {
      max_severity = "FATAL"
    }
  }
}
